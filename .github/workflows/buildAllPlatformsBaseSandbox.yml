name: Build Base Sandbox for All Release Platforms

on: 
  workflow_dispatch:
    inputs:
      buildName:
        description: 'Name Of Executable. Should not contain spaces.'
        required: true
        default: 'BattleNationsBaseSandbox'
      ref:
        description: 'What ref to checkout. Can be a branch name, tag, or SHA. Uses default branch if not specified'
        required: false
      pushToPatchkit:
        description: 'Push output to Patchkit as draft release. This will overwrite any existing drafts!'
        type: boolean

jobs:
  envVarSetup:
    name: Setup Environment Variables
    runs-on: ubuntu-latest
    outputs:
      GITHUB_SHA_SHORT: ${{ steps.envVars.outputs.GITHUB_SHA_SHORT }}
      BUILD_TIME: ${{ steps.envVars.outputs.BUILD_TIME }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: '${{ github.event.inputs.ref }}'
          token: ${{ secrets.GH_PAT }}
          repository: Battle-Nations/BattleNations-Base-Sandbox

      - name: Set ENV Vars
        id: envVars
        run: |
          if [ -z "${{ github.event.inputs.ref }}" ]
          then
            echo No ref specified
            echo "::set-output name=GITHUB_SHA_SHORT::$(git rev-parse --short HEAD)"
            echo $(git rev-parse --short HEAD)
          else
            echo Ref specified
            echo "::set-output name=GITHUB_SHA_SHORT::$(git rev-parse --short ${{ github.event.inputs.ref }})"
            echo $(git rev-parse --short ${{ github.event.inputs.ref }})
          fi
          echo "::set-output name=BUILD_TIME::$(date "+%m-%d-%y_%H-%M-%S")"

  buildForLinuxBasedPlatforms:
    name: Build for ${{ matrix.targetPlatform }} on Linux
    runs-on: ubuntu-latest
    needs: envVarSetup
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneLinux64

    steps:
      - uses: Battle-Nations/action-cached-lfs-checkout@bn-ci-main
        with:
          ref: '${{ github.event.inputs.ref }}'
          token: ${{ secrets.GH_PAT }}
          repository: Battle-Nations/BattleNations-Base-Sandbox
          fetch-depth: 0
          submodules: 'recursive'

      # - uses: actions/cache@v3
      #   with:
      #     path: Library
      #     key:
      #       Library-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
      #     restore-keys: |
      #       Library-${{ matrix.targetPlatform }}-
      #       Library-

      - run: df -h

      - uses: Battle-Nations/unity-builder@bn-ci-main
        id: buildStep
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          buildName: ${{ github.event.inputs.buildName }}
          gitPrivateToken: ${{ secrets.GH_PAT }}

      # We need to chown the files in build for our zip action below
      - run: sudo chown -R $USER build/${{ matrix.targetPlatform }}

      - uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: DEBUG_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip
          directory: build/${{ matrix.targetPlatform }}
          path: ${{ github.event.inputs.buildName }}_BackUpThisFolder_ButDontShipItWithYourGame/ ${{ github.event.inputs.buildName }}_BurstDebugInformation_DoNotShip 

      - uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: RELEASE_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip
          directory: build/${{ matrix.targetPlatform }}
          path: ${{ github.event.inputs.buildName }} *.so ${{ github.event.inputs.buildName }}_Data/
          
      - name: Upload Debug To Digital Ocean
        uses: BetaHuhn/do-spaces-action@v2
        with:
          access_key: ${{ secrets.DO_ACCESS_KEY}}
          secret_key: ${{ secrets.DO_SECRET_KEY }}
          space_name: ${{ secrets.DO_SPACE_NAME }}
          space_region: ${{ secrets.DO_SPACE_REGION }}
          source: 'build/${{ matrix.targetPlatform }}/DEBUG_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip'
          out_dir: '${{ github.event.inputs.buildName }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}/DEBUG'
          permission: private

      - name: Upload Release To Digital Ocean
        uses: BetaHuhn/do-spaces-action@v2
        with:
          access_key: ${{ secrets.DO_ACCESS_KEY}}
          secret_key: ${{ secrets.DO_SECRET_KEY }}
          space_name: ${{ secrets.DO_SPACE_NAME }}
          space_region: ${{ secrets.DO_SPACE_REGION }}
          source: 'build/${{ matrix.targetPlatform }}/RELEASE_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip'
          out_dir: '${{ github.event.inputs.buildName }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}/RELEASE'
          permission: private

      - name: Remove Debug Folders
        if: github.event.inputs.pushToPatchkit == 'true'
        run: rm -rf build/${{ matrix.targetPlatform }}/${{ github.event.inputs.buildName }}_BackUpThisFolder_ButDontShipItWithYourGame/ build/${{ matrix.targetPlatform }}/${{ github.event.inputs.buildName }}_BurstDebugInformation_DoNotShip

      - uses: Battle-Nations/Patchkit-Actions@main
        if: github.event.inputs.pushToPatchkit == 'true'
        with:
          secret: ${{ secrets.PATCHKIT_LNX_SECRET }}
          api-key: ${{ secrets.PATCHKIT_API_KEY }}
          label: '${{ steps.buildStep.outputs.buildVersion }}'
          files: build/${{ matrix.targetPlatform }}
          overwrite-draft: true

      - run: df -h

  buildForWindowsBasedPlatforms:
    name: Build for ${{ matrix.targetPlatform }} on Windows
    runs-on: windows-2019
    needs: envVarSetup
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64 # Build a Windows 64-bit standalone.

    steps:
      - uses: Battle-Nations/action-cached-lfs-checkout@bn-ci-main
        with:
          ref: '${{ github.event.inputs.ref }}'
          token: ${{ secrets.GH_PAT }}
          repository: Battle-Nations/BattleNations-Base-Sandbox
          fetch-depth: 0
          submodules: 'recursive'

      # There isn't enough space on the default D drive, so we are moving our working directory
      # to the c drive
      - name: Copy workspace to C drive
        run: |
          mkdir C:/build_workspace
          xcopy "." "C:\build_workspace\" /s /y /q /h
          
      # - uses: actions/cache@v3
      #   with:
      #     path: C:/build_workspace/Library
      #     key:
      #       Library-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
      #     restore-keys: |
      #       Library-${{ matrix.targetPlatform }}-
      #       Library-
      
      - run: get-PSDrive

      # Although we moved our directory, we are using a custom version of unity-builder to handle the
      # path that isn't in the github workspace
      - uses: Battle-Nations/unity-builder@bn-ci-main
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          buildName: ${{ github.event.inputs.buildName }}
      
      - run: get-PSDrive

      - uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: 'C:/build_workspace/RELEASE_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip'
          directory: 'C:/build_workspace/build/${{ matrix.targetPlatform }}'
          path: '*.exe *.dll ${{ github.event.inputs.buildName }}_Data/'

      - uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: 'C:/build_workspace/DEBUG_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip'
          directory: 'C:/build_workspace/build/${{ matrix.targetPlatform }}'
          path: '${{ github.event.inputs.buildName }}_BackUpThisFolder_ButDontShipItWithYourGame/ ${{ github.event.inputs.buildName }}_BurstDebugInformation_DoNotShip'

      - run: copy C:/build_workspace/*.zip ${{ github.workspace }}

      - name: Upload Debug To Digital Ocean
        uses: BetaHuhn/do-spaces-action@v2
        with:
          access_key: ${{ secrets.DO_ACCESS_KEY}}
          secret_key: ${{ secrets.DO_SECRET_KEY }}
          space_name: ${{ secrets.DO_SPACE_NAME }}
          space_region: ${{ secrets.DO_SPACE_REGION }}
          source: 'DEBUG_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip'
          out_dir: ${{ github.event.inputs.buildName }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}/DEBUG
          permission: private

      - name: Upload Release To Digital Ocean
        uses: BetaHuhn/do-spaces-action@v2
        with:
          access_key: ${{ secrets.DO_ACCESS_KEY}}
          secret_key: ${{ secrets.DO_SECRET_KEY }}
          space_name: ${{ secrets.DO_SPACE_NAME }}
          space_region: ${{ secrets.DO_SPACE_REGION }}
          source: 'RELEASE_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip'
          out_dir: ${{ github.event.inputs.buildName }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}/RELEASE
          permission: private

      - name: Remove Debug Folders
        if: github.event.inputs.pushToPatchkit == 'true'
        run: rm -rf C:/build_workspace/build/${{ github.event.inputs.buildName }}_BackUpThisFolder_ButDontShipItWithYourGame/ C:/build_workspace/build/${{ github.event.inputs.buildName }}_BurstDebugInformation_DoNotShip
        shell: bash
      
      - uses: Battle-Nations/Patchkit-Actions@main
        if: github.event.inputs.pushToPatchkit == 'true'
        with:
          secret: ${{ secrets.PATCHKIT_WIN_SECRET }}
          api-key: ${{ secrets.PATCHKIT_API_KEY }}
          label: '${{ steps.buildStep.outputs.buildVersion }}'
          files: C:/build_workspace/build/${{ matrix.targetPlatform }}
          overwrite-draft: true

  buildForMacOSBasedPlatforms:
    name: Build for ${{ matrix.targetPlatform }} on Mac
    runs-on: macos-latest
    needs: envVarSetup
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone.

    steps:
      - uses: Battle-Nations/action-cached-lfs-checkout@bn-ci-main
        with:
          ref: '${{ github.event.inputs.ref }}'
          token: ${{ secrets.GH_PAT }}
          repository: Battle-Nations/BattleNations-Base-Sandbox
          fetch-depth: 0
          submodules: 'recursive'

      - run: df -h

      # - uses: actions/cache@v3
      #   with:
      #     path: Library
      #     key:
      #       Library-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
      #     restore-keys: |
      #       Library-${{ matrix.targetPlatform }}-
      #       Library-

      - uses: Battle-Nations/unity-builder@bn-ci-main
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          buildName: ${{ github.event.inputs.buildName }}

      - uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: 'RELEASE_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip'
          directory: 'build/${{ matrix.targetPlatform }}'
          path: '*.app'

      - uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: 'DEBUG_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip'
          directory: 'build/${{ matrix.targetPlatform }}'
          path: '${{ github.event.inputs.buildName }}_BackUpThisFolder_ButDontShipItWithYourGame/ ${{ github.event.inputs.buildName }}_BurstDebugInformation_DoNotShip'

      - run: ls -lashi

      - name: Upload Debug To Digital Ocean
        uses: BetaHuhn/do-spaces-action@v2
        with:
          access_key: ${{ secrets.DO_ACCESS_KEY}}
          secret_key: ${{ secrets.DO_SECRET_KEY }}
          space_name: ${{ secrets.DO_SPACE_NAME }}
          space_region: ${{ secrets.DO_SPACE_REGION }}
          source: 'build/${{ matrix.targetPlatform }}/DEBUG_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip'
          out_dir: '${{ github.event.inputs.buildName }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}/DEBUG'
          permission: private

      - name: Upload Release To Digital Ocean
        uses: BetaHuhn/do-spaces-action@v2
        with:
          access_key: ${{ secrets.DO_ACCESS_KEY}}
          secret_key: ${{ secrets.DO_SECRET_KEY }}
          space_name: ${{ secrets.DO_SPACE_NAME }}
          space_region: ${{ secrets.DO_SPACE_REGION }}
          source: 'build/${{ matrix.targetPlatform }}/RELEASE_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip'
          out_dir: '${{ github.event.inputs.buildName }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}/RELEASE'
          permission: private

      - name: Remove Debug Folders
        if: github.event.inputs.pushToPatchkit == 'true'
        run: rm -rf build/${{ matrix.targetPlatform }}/${{ github.event.inputs.buildName }}_BackUpThisFolder_ButDontShipItWithYourGame/ build/${{ matrix.targetPlatform }}/${{ github.event.inputs.buildName }}_BurstDebugInformation_DoNotShip

      - uses: Battle-Nations/Patchkit-Actions@main
        if: github.event.inputs.pushToPatchkit == 'true'
        with:
          secret: ${{ secrets.PATCHKIT_MAC_SECRET }}
          api-key: ${{ secrets.PATCHKIT_API_KEY }}
          label: '${{ steps.buildStep.outputs.buildVersion }}'
          files: build/${{ matrix.targetPlatform }}
          overwrite-draft: true

      - run: df -h
