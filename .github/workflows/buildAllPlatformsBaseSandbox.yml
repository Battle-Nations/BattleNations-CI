name: Build Base Sandbox for All Release Platforms

on: 
  workflow_dispatch:
    inputs:
      buildName:
        description: 'Name Of Executable. Should not contain spaces.'
        required: true
        default: 'BattleNationsBaseSandbox'
      ref:
        description: 'What ref to checkout. Can be a branch name, tag, or SHA. Uses default branch if not specified'
        required: false

jobs:
  envVarSetup:
    name: Setup Environment Variables
    runs-on: ubuntu-latest
    outputs:
      GITHUB_SHA_SHORT: ${{ steps.envVars.outputs.GITHUB_SHA_SHORT }}
      BUILD_TIME: ${{ steps.envVars.outputs.BUILD_TIME }}

    steps:
      - name: Set ENV Vars
        id: envVars
        run: |
          echo "::set-output name=GITHUB_SHA_SHORT::$(echo $GITHUB_SHA | cut -c 1-6)"
          echo "::set-output name=BUILD_TIME::$(date "+%m-%d-%y_%H-%M-%S")"

  buildForLinuxBasedPlatforms:
    name: Build for ${{ matrix.targetPlatform }} on Linux
    runs-on: ubuntu-latest
    needs: envVarSetup
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneLinux64

    steps:
      - uses: actions/checkout@v3
        with:
          ref: '${{ github.event.inputs.ref }}'
          token: ${{ secrets.GH_PAT }}
          repository: Battle-Nations/BattleNations-Base-Sandbox
          fetch-depth: 0
          lfs: 'true'
          submodules: 'recursive'

      - run: git submodule foreach git lfs pull

      - uses: actions/cache@v2
        with:
          path: Library
          key:
            Library-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}-
            Library-

      - run: df -h

      - uses: Battle-Nations/unity-builder@bn-ci-main
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          buildName: ${{ github.event.inputs.buildName }}
          gitPrivateToken: ${{ secrets.GH_PAT }}

      # Folder permissions don't allow us to write our zip so we need to chmod it. Using 777 for simplicity
      - run: sudo chmod 777 build/${{ matrix.targetPlatform }}

      - uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: DEBUG_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip
          directory: build/${{ matrix.targetPlatform }}
          path: ${{ github.event.inputs.buildName }}_BackUpThisFolder_ButDontShipItWithYourGame/ ${{ github.event.inputs.buildName }}_BurstDebugInformation_DoNotShip 

      - uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: RELEASE_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip
          directory: build/${{ matrix.targetPlatform }}
          path: ${{ github.event.inputs.buildName }} *.so ${{ github.event.inputs.buildName }}_Data/
          
      - name: Upload Debug To Digital Ocean
        uses: BetaHuhn/do-spaces-action@v2
        with:
          access_key: ${{ secrets.DO_ACCESS_KEY}}
          secret_key: ${{ secrets.DO_SECRET_KEY }}
          space_name: ${{ secrets.DO_SPACE_NAME }}
          space_region: ${{ secrets.DO_SPACE_REGION }}
          source: 'build/${{ matrix.targetPlatform }}/DEBUG_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip'
          out_dir: '${{ github.event.inputs.buildName }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}/DEBUG'
          permission: private

      - name: Upload Release To Digital Ocean
        uses: BetaHuhn/do-spaces-action@v2
        with:
          access_key: ${{ secrets.DO_ACCESS_KEY}}
          secret_key: ${{ secrets.DO_SECRET_KEY }}
          space_name: ${{ secrets.DO_SPACE_NAME }}
          space_region: ${{ secrets.DO_SPACE_REGION }}
          source: 'build/${{ matrix.targetPlatform }}/RELEASE_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip'
          out_dir: '${{ github.event.inputs.buildName }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}/RELEASE'
          permission: private

      - run: df -h

  buildForWindowsBasedPlatforms:
    name: Build for ${{ matrix.targetPlatform }} on Windows
    runs-on: windows-2019
    needs: envVarSetup
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64 # Build a Windows 64-bit standalone.

    steps:
      - uses: actions/checkout@v3
        with:
          ref: '${{ github.event.inputs.ref }}'
          token: ${{ secrets.GH_PAT }}
          repository: Battle-Nations/BattleNations-Base-Sandbox
          fetch-depth: 0
          lfs: 'true'
          submodules: 'recursive'

      - run: git submodule foreach git lfs pull
          
      - uses: actions/cache@v2
        with:
          path: Library
          key:
            Library-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}-
            Library-

      # There isn't enough space on the default D drive, so we are moving our working directory
      # to the c drive
      - name: Copy workspace to C drive
        run: |
          mkdir C:/build_workspace
          xcopy "." "C:\build_workspace\" /s /y /q /h

      - name: Show workspace
        run: | 
          Get-ChildItem -Path C:/build_workspace -Directory
          pwd
      
      - run: get-PSDrive

      # Although we moved our directory, we are using a custom version of unity-builder to handle the
      # path that isn't in the github workspace
      - uses: Battle-Nations/unity-builder@bn-ci-main
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          buildName: ${{ github.event.inputs.buildName }}
      
      - run: get-PSDrive

      - uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: 'C:/build_workspace/RELEASE_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip'
          directory: 'C:/build_workspace/build/${{ matrix.targetPlatform }}'
          path: '*.exe *.dll ${{ github.event.inputs.buildName }}_Data/'

      - uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: 'C:/build_workspace/DEBUG_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip'
          directory: 'C:/build_workspace/build/${{ matrix.targetPlatform }}'
          path: '${{ github.event.inputs.buildName }}_BackUpThisFolder_ButDontShipItWithYourGame/ ${{ github.event.inputs.buildName }}_BurstDebugInformation_DoNotShip'

      - name: Upload Debug To Digital Ocean
        uses: BetaHuhn/do-spaces-action@v2
        with:
          access_key: ${{ secrets.DO_ACCESS_KEY}}
          secret_key: ${{ secrets.DO_SECRET_KEY }}
          space_name: ${{ secrets.DO_SPACE_NAME }}
          space_region: ${{ secrets.DO_SPACE_REGION }}
          source: 'C:/build_workspace/DEBUG_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip'
          out_dir: ${{ github.event.inputs.buildName }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}/DEBUG
          permission: private

      - name: Upload Release To Digital Ocean
        uses: BetaHuhn/do-spaces-action@v2
        with:
          access_key: ${{ secrets.DO_ACCESS_KEY}}
          secret_key: ${{ secrets.DO_SECRET_KEY }}
          space_name: ${{ secrets.DO_SPACE_NAME }}
          space_region: ${{ secrets.DO_SPACE_REGION }}
          source: 'C:/build_workspace/RELEASE_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip'
          out_dir: ${{ github.event.inputs.buildName }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}/RELEASE
          permission: private

  buildForMacOSBasedPlatforms:
    name: Build for ${{ matrix.targetPlatform }} on Mac
    runs-on: macos-latest
    needs: envVarSetup
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone.

    steps:
      - uses: actions/checkout@v3
        with:
          ref: '${{ github.event.inputs.ref }}'
          token: ${{ secrets.GH_PAT }}
          repository: Battle-Nations/BattleNations-Base-Sandbox
          fetch-depth: 0
          lfs: 'true'
          submodules: 'recursive'

      - run: git submodule foreach git lfs pull

      - uses: actions/cache@v2
        with:
          path: Library
          key:
            Library-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}-
            Library-

      - uses: Battle-Nations/unity-builder@bn-ci-main
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          buildName: ${{ github.event.inputs.buildName }}

      - uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: 'RELEASE_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip'
          directory: 'build/${{ matrix.targetPlatform }}'
          path: '*.app'

      - uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: 'DEBUG_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip'
          directory: 'build/${{ matrix.targetPlatform }}'
          path: '${{ github.event.inputs.buildName }}_BackUpThisFolder_ButDontShipItWithYourGame/ ${{ github.event.inputs.buildName }}_BurstDebugInformation_DoNotShip'

      - run: ls -lashi

      - name: Upload Debug To Digital Ocean
        uses: BetaHuhn/do-spaces-action@v2
        with:
          access_key: ${{ secrets.DO_ACCESS_KEY}}
          secret_key: ${{ secrets.DO_SECRET_KEY }}
          space_name: ${{ secrets.DO_SPACE_NAME }}
          space_region: ${{ secrets.DO_SPACE_REGION }}
          source: 'build/${{ matrix.targetPlatform }}/DEBUG_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip'
          out_dir: '${{ github.event.inputs.buildName }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}/DEBUG'
          permission: private

      - name: Upload Release To Digital Ocean
        uses: BetaHuhn/do-spaces-action@v2
        with:
          access_key: ${{ secrets.DO_ACCESS_KEY}}
          secret_key: ${{ secrets.DO_SECRET_KEY }}
          space_name: ${{ secrets.DO_SPACE_NAME }}
          space_region: ${{ secrets.DO_SPACE_REGION }}
          source: 'build/${{ matrix.targetPlatform }}/RELEASE_${{ github.event.inputs.buildName }}_${{ matrix.targetPlatform }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}.zip'
          out_dir: '${{ github.event.inputs.buildName }}_${{ needs.envVarSetup.outputs.BUILD_TIME }}_${{ needs.envVarSetup.outputs.GITHUB_SHA_SHORT }}/RELEASE'
          permission: private

      - run: df -h
